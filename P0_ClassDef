#####################################################################
# Author: Alexandra Yuhas
# Username: yuhasa
#
# Assignment: P0: Final Project
#
# Purpose: This file creates a class called Decrypt which is used to decrypt encrypted ciphers.
######################################################################
# Acknowledgements: Dr. Scott Heggen for a lot of help.
# https://www.quora.com/How-do-I-count-the-frequency-of-different-letters-that-are-in-a-text-file-python-and-display-the-amount-on-a-list
# licensed under a Creative Commons
# Attribution-Noncommercial-Share Alike 3.0 United States License.
####################################################################################

class Decrypt:

    alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"

    def __init__(self, input_file = "message_input.txt"):
        """
        A constructor for the Decrypt class

        :param input_file: The file to be decrypted
        """
        self.input_file = input_file                         # The file to be encrypted or decrypted                          # Either "encrypt" or "decrypt"
        self.import_file()                                   # This calls the import_file method
        self.cipher = ""                                     # A placeholder for the cipher

    def import_file(self):
        """
        Imports a file stored in the variable self.input_file

        :return: a string representing the contents of the file
        """
        f = open(self.input_file, "r")
        self.cipher = f.read()                   # Set self.cipher to the file contents
        f.close()

    def export_file(self, text_to_export, filename):
        """
        Exports a file called filename

        :param text_to_export: the string to be written to the exported file
        :param filename: a string representing the name of the file to be exported to
        """
        f = open(filename, "w")
        f.write(text_to_export)
        f.close()
        print("File exported to " + filename)

    def counting_frequency(self, cipher):
        d = {}
        for letter in cipher:
            d[letter] = d.get(letter, 0) + 1
        max = 0
        for k in d:
            if d[k] > max:
                max = d[k]
                print(max)
                return max


    def two_starting(self, cipher, starting_letter, new_letter):
        # The goal of this method is to scan the file and find two letter words starting with a specific letter and
        # replace the second letter with new_letter
        pass

    def two_ending(self, cipher, ending_letter, new_letter):
        # The goal of this method is to scan the file and find two letter words ending with a specific letter and
        # replace the first letter with new_letter
        pass

    def four_ending(self, cipher, ending_letters, new_letter):
        pass

    def three_starting_ending(self):
        pass

    def three_starting(self):
        pass

    def three_ending(self):
        pass

    def twice_in_row(self):
        pass

def main():
    alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    cipher0 = Decrypt("cipher_to_friend_1.txt")
    cipher0.counting_frequency(cipher0)

main()


